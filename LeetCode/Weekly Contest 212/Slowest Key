typedef pair<int, int> pd; 
  struct myComp { 
    constexpr bool operator()( pair<int, int> const& a, pair<int, int> const& b) 
        const noexcept 
    { 
        if(a.first == b.first)
            return a.second < b.second;
        else
            return a.first < b.first;
    } 
}; 

class Solution {
public:
    char slowestKey(vector<int>& releaseTimes, string keysPressed) {
        priority_queue<pd, vector<pd>, myComp> pq; 
        int n =keysPressed.size();
        for(int i=0; i<n; i++){
            if(i==0){
                pq.push({releaseTimes[i], i});
            }else{
                pq.push({releaseTimes[i]-releaseTimes[i-1], i});
            }
        }
        
        pair<int, int> ans = pq.top();
        return keysPressed[ans.second];
    }
};